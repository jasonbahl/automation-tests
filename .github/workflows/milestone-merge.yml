name: Handle Milestone Merge

on:
  pull_request_target:
    types: [closed]
    branches:
      - develop
  workflow_dispatch:
    inputs:
      milestone_branch:
        description: 'Milestone branch name (e.g., milestone/feature-name)'
        required: true
        type: string

jobs:
  debug-event:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target'
    steps:
      - name: Debug Event
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "PR merged: ${{ github.event.pull_request.merged }}"
          echo "Base ref: ${{ github.event.pull_request.base.ref }}"
          echo "Head ref: ${{ github.event.pull_request.head.ref }}"
          echo "PR number: ${{ github.event.pull_request.number }}"
          echo "PR title: ${{ github.event.pull_request.title }}"

  process-milestone:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    needs: [debug-event]
    if: |
      (github.event_name == 'pull_request_target' && 
       github.event.pull_request.merged == true && 
       startsWith(github.event.pull_request.head.ref, 'milestone/')) || 
      github.event_name == 'workflow_dispatch'
    env:
      REPO_URL: "https://github.com/${{ github.repository }}"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: develop
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Cache npm dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
          
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
        
      - name: Check dependencies
        if: steps.npm-cache.outputs.cache-hit == 'true'
        run: npm ci --prefer-offline --no-audit
          
      - name: Get milestone information
        id: milestone_info
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            MILESTONE_BRANCH="${{ github.event.inputs.milestone_branch }}"
          else
            MILESTONE_BRANCH="${{ github.event.pull_request.head.ref }}"
          fi
          
          MILESTONE_NAME=$(echo "${MILESTONE_BRANCH}" | sed 's/^milestone\///')
          echo "name=${MILESTONE_NAME}" >> $GITHUB_OUTPUT
          echo "branch=${MILESTONE_BRANCH}" >> $GITHUB_OUTPUT
          
      - name: Generate release notes
        id: release_notes
        run: |
          # Create temp directory for release notes
          mkdir -p /tmp/release-notes
          
          # Generate release notes including milestone changes
          node scripts/generate-release-notes.js \
            --milestone="${{ steps.milestone_info.outputs.name }}" > /tmp/release-notes/notes.md
            
          # Check for breaking changes in milestone
          if grep -q "### Breaking Changes" /tmp/release-notes/notes.md; then
            echo "has_breaking_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_breaking_changes=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Update upgrade notice for breaking changes
        if: steps.release_notes.outputs.has_breaking_changes == 'true'
        run: |
          # Update upgrade notice with breaking change information
          node scripts/update-upgrade-notice.js \
            --notes-file=/tmp/release-notes/notes.md
          
          # Commit upgrade notice changes if any
          if [[ -n "$(git status --porcelain)" ]]; then
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add readme.txt
            git commit -m "docs: update upgrade notice for breaking changes from milestone ${{ steps.milestone_info.outputs.name }}"
            git push
          fi
          
      - name: Update changelog
        run: |
          # Update both changelog files with milestone changes
          node scripts/update-changelogs.js \
            --notes-file=/tmp/release-notes/notes.md \
            --milestone="${{ steps.milestone_info.outputs.name }}"
          
          # Commit changelog changes if any
          if [[ -n "$(git status --porcelain)" ]]; then
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add CHANGELOG.md readme.txt
            git commit -m "docs: update changelogs for milestone ${{ steps.milestone_info.outputs.name }}"
            git push
          fi 